# -*- coding: utf-8 -*-
"""ML Desafio 2 - Romulo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EPd0AbF0_1S87DHbbNoosPfnKvbxtO8B
"""

import tensorflow as tf

import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/refs/heads/master/winequality-white.csv')

df

from sklearn.preprocessing import LabelEncoder

def classificar_vinho(quality):
    if quality <= 4:
        return 'ruim'
    elif quality <= 6:
        return 'medio'
    else:
        return 'otimo'

df['categoria'] = df['quality'].apply(classificar_vinho)

dados = df.drop(columns=['quality', 'categoria'])
alvo = df['categoria']

from sklearn.model_selection import train_test_split

dados_train, dados_test, alvo_train, alvo_test = train_test_split(dados, alvo, test_size=0.30, random_state=42)

le = LabelEncoder()
alvo_train = le.fit_transform(alvo_train)
alvo_test = le.transform(alvo_test)

dados_train = dados_train / dados_train.max()
dados_test = dados_test / dados_test.max()

model = tf.keras.models.Sequential([
    tf.keras.Input(shape=(dados_train.shape[1],)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(4, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(dados_train, alvo_train, epochs=100)

model.evaluate(dados_test, alvo_test)

import numpy as np
from sklearn.metrics import confusion_matrix

previsoes_prob = model.predict(dados_test)

previsoes = np.argmax(previsoes_prob, axis=1)

matrix = confusion_matrix(alvo_test, previsoes)

print(matrix)